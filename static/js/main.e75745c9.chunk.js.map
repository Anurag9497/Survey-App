{"version":3,"sources":["components/Menu/index.js","components/TypeSelector/index.js","components/Question/index.js","components/Option/index.js","components/CreateSurvey/index.js","components/Publish/index.js","App.js","reportWebVitals.js","index.js"],"names":["Menu","className","to","TypeSelector","QType","setQType","value","onChange","event","parseInt","target","Question","setQText","type","placeholder","Option","addOption","removeOption","updateOptionInfo","newId","onClick","CreateSurvey","sQuestion","setSQuestion","getRandom","Math","floor","random","defaultOption","id","useState","option","setOption","QText","history","useHistory","flag","newOption","updateOption","length","pop","newValue","updateInfo","index","findIndex","temp","updateSQuestion","i","updateObj","question","options","updateQuestion","alert","map","item","itemIndex","push","Publish","style","fontFamily","opt","width","whiteSpace","htmlFor","name","App","title","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e75745c9.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nfunction Menu() {\r\n    return (\r\n        <div className=\"my-4\">\r\n            <Link to=\"/create\">\r\n                <button className=\"btn btn-danger m-1\">Create Survey</button>\r\n            </Link><br/>\r\n            <Link to=\"/publish\">\r\n                <button className=\"btn btn-danger m-1\">Take Survey</button>\r\n            </Link>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Menu;\r\n","import React from 'react'\r\n\r\nfunction TypeSelector({QType, setQType}) {\r\n    return (\r\n        <div className=\"my-3\">\r\n            <select className=\"w-25 rounded\" value={QType} onChange={event => setQType(parseInt(event.target.value))}>\r\n                <option value=\"0\">Select Question Type</option>\r\n                <option value=\"1\">Multi-Select</option>\r\n                <option value=\"2\">Single-Select</option>\r\n            </select>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TypeSelector;\r\n","import React from 'react';\r\n\r\nfunction Question({setQText}) {\r\n    return (\r\n        <div className=\"my-3 input-group\">\r\n            <div className=\"input-group-prepend\">\r\n                <span className=\"input-group-text\">?</span>\r\n            </div>\r\n            <input type=\"text\" className=\"form-control\" placeholder=\"Question\" onChange={event => setQText(event.target.value)}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Question;\r\n","import React from 'react';\r\n\r\nfunction Option({addOption, removeOption, updateOptionInfo, newId}) {\r\n    return (\r\n        <div className=\"my-3 input-group\">\r\n            <input \r\n            type=\"text\" \r\n            className=\"form-control\" \r\n            placeholder=\"Type answer here\" \r\n            onChange={event => updateOptionInfo(newId,event.target.value)}\r\n            />\r\n            <div className=\"input-group-append\">\r\n                <button className=\"btn btn-outline-secondary\" onClick={addOption}>+</button>\r\n                <button className=\"btn btn-outline-secondary\" onClick={removeOption}>-</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Option;\r\n","import React,{useState} from 'react';\r\nimport TypeSelector from '../TypeSelector';\r\nimport Question from '../Question';\r\nimport Option from '../Option';\r\nimport { useHistory } from 'react-router';\r\n\r\nfunction CreateSurvey({sQuestion, setSQuestion}) {\r\n    const getRandom = () => Math.floor(Math.random()*1000 +1);\r\n    const defaultOption = [{id: getRandom(), value: \" \"},{id: getRandom(), value: \" \"}];\r\n    const[QType, setQType] = useState(0);\r\n    const[option, setOption] = useState(defaultOption);\r\n    const[QText, setQText] = useState(\" \");\r\n    const history = useHistory();\r\n    let flag = true;\r\n\r\n    const addOption = () => {\r\n        let newOption = {\r\n            id: getRandom(),\r\n            value: \"\"\r\n        };\r\n        let updateOption = [...option,newOption];\r\n        setOption(updateOption);\r\n    };\r\n\r\n    const removeOption = () => {\r\n        if(option.length>2)\r\n        {\r\n            let updateOption = [...option];\r\n            updateOption.pop();\r\n            setOption(updateOption);\r\n        }\r\n    };\r\n\r\n    const updateOptionInfo = (newId, newValue) => {\r\n        let updateInfo = [...option];\r\n        let index = updateInfo.findIndex(temp => temp.id===newId);\r\n        updateInfo[index].value = newValue;\r\n        setOption(updateInfo);\r\n    };\r\n\r\n    const updateSQuestion = () => {\r\n        for(let i=0;i<option.length;i++)\r\n        {\r\n            if(option[i].value===\" \")\r\n                flag = false;\r\n        }\r\n        if(flag)\r\n        {\r\n            let updateObj = {\r\n                type: QType,\r\n                question: QText,\r\n                options: option\r\n            };\r\n            let updateQuestion = [...sQuestion,updateObj];\r\n            setSQuestion(updateQuestion);\r\n            setOption(defaultOption);\r\n            setQType(0);\r\n        }\r\n        else\r\n        {\r\n            alert(\"Input fields are empty!\");\r\n        }\r\n    };\r\n\r\n    const handlePublish = () => {\r\n        for(let i=0;i<option.length;i++)\r\n        {\r\n            if(option[i].value===\" \")\r\n                flag = false;\r\n        }\r\n        if(flag)\r\n        {\r\n            history.push(\"/publish\");\r\n            updateSQuestion();\r\n        }\r\n        else\r\n        {\r\n            alert(\"Input fields are empty!\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <TypeSelector QType={QType} setQType={setQType}/>\r\n            {QType!==0 ?\r\n                <>\r\n                    <Question setQText={setQText}/>\r\n                    {option.map((item,itemIndex) => {\r\n                        return  <Option \r\n                        key={item.id} \r\n                        addOption={addOption} \r\n                        removeOption={removeOption} \r\n                        updateOptionInfo={updateOptionInfo}\r\n                        newId={option[itemIndex].id}\r\n                        />;\r\n                    })}\r\n                    <button className=\"btn btn-primary m-1\" onClick={updateSQuestion}>Add Question</button>\r\n                    <button className=\"btn btn-primary m-1\"onClick={handlePublish}>Publish</button>\r\n                </>\r\n            : null}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default CreateSurvey;\r\n","import React from 'react';\r\nimport { useHistory } from 'react-router';\r\n\r\nfunction Publish({sQuestion}) {\r\n    const history = useHistory();\r\n    return (\r\n        <div>\r\n            {sQuestion.length>0 ?\r\n                sQuestion.map((item,itemIndex) => (\r\n                    <div key={itemIndex} className=\"my-3\" style={{fontFamily: \"cursive\"}}>\r\n                        <h4>{item.question}</h4>\r\n                        {item.options.map(opt => (\r\n                            item.type===1 ?\r\n                            <div key={opt.id} className=\"text-left m-auto\" style={{width: \"20%\", whiteSpace: \"nowrap\"}}>\r\n                                <input type=\"checkbox\" id={opt.id}/>&nbsp;\r\n                                <label htmlFor={opt.id}>{opt.value}</label>\r\n                            </div> :\r\n                            <div key={opt.id} className=\"text-left m-auto\" style={{width: \"20%\", whiteSpace: \"nowrap\"}}>\r\n                                <input type=\"radio\" name=\"radio\" id={opt.id}/>&nbsp;\r\n                                <label htmlFor={opt.id}>{opt.value}</label>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                )) :\r\n                <h4 className=\"text-center my-3 text-danger\">No questions are added</h4>\r\n            }\r\n            {sQuestion.length>0 ?\r\n                <button className=\"btn btn-primary btn-sm\" onClick={() => history.push(\"/\")}>Confirm</button>\r\n            : null}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Publish;\r\n","import React,{useState} from 'react';\nimport './App.css';\nimport {BrowserRouter as Router, Switch, Route, Link} from 'react-router-dom';\nimport Menu from './components/Menu';\nimport CreateSurvey from './components/CreateSurvey';\nimport Publish from './components/Publish';\n\nfunction App() {\n  const[sQuestion, setSQuestion] = useState([]);\n  return (\n    <div className=\"container text-center\">\n      <Router>\n        <Link to=\"/\" className=\"text-decoration-none\">\n          <h1 className=\"my-1 display-3 text-success\" title=\"Click for Home\">Survey App</h1>\n        </Link>\n        <Switch>\n          <Route exact path=\"/\">\n            <Menu />\n          </Route>\n          <Route path=\"/create\">\n            <CreateSurvey sQuestion={sQuestion} setSQuestion={setSQuestion}/>\n          </Route>\n          <Route path=\"/publish\">\n            <Publish sQuestion={sQuestion}/>\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}